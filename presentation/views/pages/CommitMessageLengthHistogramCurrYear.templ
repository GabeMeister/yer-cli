package pages

import (
	"GabeMeister/yer-cli/analyzer"
	helpers "GabeMeister/yer-cli/presentation/helpers"
	components "GabeMeister/yer-cli/presentation/views/components"
	"fmt"
)

func getCommitMessageLengthHistogramCurrYearChartData(recap analyzer.Recap) helpers.BarChartData {
	barChartData := helpers.BarChartData{
		Data:       []helpers.DataPoint{},
		XAxisLabel: "Author",
		YAxisLabel: fmt.Sprintf("â†‘ Frequency (%d)", analyzer.CURR_YEAR),
		XAxisMod:   25,
	}

	largestLength := recap.CommitMessageHistogramCurrYear[len(recap.CommitMessageHistogramCurrYear)][0]

	// Cap the largest to 300 so the chart isn't ridiculously skinny bars
	if largestLength > 300 {
		largestLength = 300
	}

	for _, message := range recap.CommitMessageHistogramCurrYear {
		length := message[0]
		frequency := message[1]

		if length < largestLength {

			barChartData.Data = append(barChartData.Data, helpers.DataPoint{
				X: fmt.Sprintf("%d", length),
				Y: frequency,
			})
		}
	}

	return barChartData
}

templ CommitMessageLengthHistogramCurrYear(recap analyzer.Recap) {
	@components.Slide() {
		<div id="container" data-value={ helpers.Json(getCommitMessageLengthHistogramCurrYearChartData(recap)) }></div>
		<div class="mt-12"></div>
		@components.NextButton(helpers.GetNextButtonLink("/commit-message-length-histogram-curr-year", recap))
	}
}
