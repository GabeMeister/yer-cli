package pages 

import (
	"GabeMeister/yer-cli/analyzer"
	"GabeMeister/yer-cli/presentation/helpers"
	"GabeMeister/yer-cli/presentation/views/components"
	"fmt"
	"slices"
)

type FileChangesMadeByAuthorProps struct {
	data string
}

func getFileChangesMadeByAuthorChartData(data []analyzer.AuthorFileChangesSummary) map[string]interface{} {
	// Put the author names as the "buckets" across the X axis
	buckets := []string{}
	insertions := helpers.StackedBarChartDataset{
		Label:           "Insertions",
		BackgroundColor: "rgb(99, 255, 132)",
		Stack:           fmt.Sprintf("%d", analyzer.CURR_YEAR),
	}
	deletions := helpers.StackedBarChartDataset{
		Label:           "Deletions",
		BackgroundColor: "rgb(255, 99, 132)",
		Stack:           fmt.Sprintf("%d", analyzer.CURR_YEAR),
	}

	slices.SortFunc(data, func(a analyzer.AuthorFileChangesSummary, b analyzer.AuthorFileChangesSummary) int {
		totalA := a.Insertions + a.Deletions
		totalB := b.Insertions + b.Deletions

		return totalB - totalA
	})

	// Limit to the top 25
	if len(data) > 25 {
		data = data[:25]
	}

	for _, d := range data {
		buckets = append(buckets, string(d.Author))

		insertions.Data = append(insertions.Data, d.Insertions)
		deletions.Data = append(deletions.Data, 0-d.Deletions)
	}

	stackedBarChartData := helpers.StackedBarChartData{
		Buckets: buckets,
		Datasets: []helpers.StackedBarChartDataset{
			deletions,
			insertions,
		},
	}

	return helpers.GetStackedBarChartData(stackedBarChartData)
}

templ FileChangesMadeByAuthor(multiRepoRecap analyzer.MultiRepoRecap) {
	@components.Slide() {
		@components.Title() {
			File Changes Made by Author
		}
		<div
			class="chart-js-container"
			data-grouped-bar-chart-data={ helpers.Json(getFileChangesMadeByAuthorChartData(multiRepoRecap.FileChangesMadeByAuthor)) }
		>
			<canvas id="grouped-bar-chart-canvas"></canvas>
		</div>
		@components.NextButton(helpers.GetMultiRepoNextButtonLink("/file-changes-made-by-author", multiRepoRecap))
	}
}
