package pages

import "GabeMeister/yer-cli/presentation/views/components"

type ConfigSetupProps struct {
	RecapName string
	RepoPath  string
	Toast     string

	// AllEngineers            []string
	// SelectedEngineers       []string
	// DuplicateEngineerGroups []analyzer.DuplicateEngineerGroup
	// SearchText              string
}

func truncateRepoPath(path string) string {
	maxLength := 30

	if len(path) > maxLength {
		startIdx := len(path) - maxLength
		return "..." + path[startIdx:]
	} else {
		return path
	}
}

templ ConfigSetup(props ConfigSetupProps) {
	@components.Page() {
		<div id="config-setup">
			<div class="bg-gray-800 flex justify-center items-center min-h-screen">
				<div class="bg-white w-1/3 min-w-[400px] p-12 rounded-md">
					<form
						hx-patch="/config-file"
						hx-swap="innerHTML"
						hx-target="#root"
						class="flex flex-col items-start gap-6"
					>
						<h1 class="h1">Config Setup</h1>
						<input
							type="text"
							class="text-input w-full"
							placeholder="Recap Name"
							name="recap-name"
							id="recap-name"
							value={ props.RecapName }
							required
						/>
						<div class="w-full">
							if props.RepoPath == "" {
								<button
									class="btn"
									type="button"
									hx-get="/dir-list-modal"
									hx-target="body"
									hx-swap="beforeend"
								>
									<i class="fa-solid fa-plus"></i>
									<span>Add Repo</span>
								</button>
							} else {
								<div class="flex gap-3 items-center w-full">
									<i
										class="fa-solid fa-pencil text-gray-400 hover:text-gray-500 duration-200 cursor-pointer"
										hx-get="/dir-list-modal"
										hx-target="body"
										hx-swap="beforeend"
									></i>
									<p>{ truncateRepoPath(props.RepoPath) }</p>
									<input type="hidden" name="repo-path" value={ props.RepoPath }/>
								</div>
							}
						</div>
						<button
							class="btn lg w-full"
						>
							Save
							@components.LoadingSpinner()
						</button>
					</form>
				</div>
			</div>
		</div>
		if props.Toast != "" {
			<div
				id="toast"
				class="toast fixed bottom-1 left-1 text-white"
				hx-swap-oob="true"
			>
				{ props.Toast }
			</div>
		}
	}
}
