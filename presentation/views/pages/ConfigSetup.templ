package pages

import (
	"GabeMeister/yer-cli/presentation/views/components"
	"GabeMeister/yer-cli/presentation/views/components/ConfigSetupPage"
	"fmt"
)

type ConfigSetupProps struct {
	RecapName             string
	RepoPath              string
	Toast                 string
	Year                  int
	MasterBranch          string
	IncludeFileExtensions string
	ExcludeDirs           string
	ExcludeFiles          string
	AllAuthors            []string

	// SelectedEngineers       []string
	// DuplicateEngineerGroups []analyzer.DuplicateEngineerGroup
	// SearchText              string
}

templ ConfigSetup(props ConfigSetupProps) {
	@components.Page() {
		<div id="config-setup">
			<div class="bg-gray-800 flex justify-center items-center min-h-screen">
				<div class="bg-white w-1/3 min-w-[600px] max-w-[750px] p-12 rounded-md">
					<form
						hx-patch="/config-file"
						hx-swap="outerHTML"
						hx-target="#config-setup"
						class="flex flex-col items-start gap-6"
					>
						<h1 class="h1">Config Setup</h1>
						<div class="w-full">
							<label for="recap-name" class="font-medium">Recap Name</label>
							<input
								type="text"
								class="text-input w-full"
								placeholder={ fmt.Sprintf("My Recap %d", props.Year) }
								name="recap-name"
								id="recap-name"
								value={ props.RecapName }
								required
							/>
						</div>
						<div class="w-full">
							<label class="font-medium">Repo File Path</label>
							@ConfigSetupPage.RepoPath(ConfigSetupPage.RepoPathProps{
								RepoPath: props.RepoPath,
							})
						</div>
						<div class="w-full">
							<label for="master-branch-name" class="font-medium">Branch to Analyze</label>
							@ConfigSetupPage.MasterBranchInput(ConfigSetupPage.MasterBranchInputProps{
								Name: props.MasterBranch,
							})
						</div>
						<div class="w-full">
							<label for="include-file-extensions" class="font-medium">File Extensions To Include in Recap</label>
							@ConfigSetupPage.IncludeFileExtensions(ConfigSetupPage.IncludeFileExtensionsProps{
								IncludeFileExtensions: props.IncludeFileExtensions,
							})
						</div>
						<div class="w-full">
							<label for="exclude-dirs" class="font-medium">Directories to Exclude from Recap</label>
							@ConfigSetupPage.ExcludeDirs(ConfigSetupPage.ExcludeDirsProps{
								ExcludeDirs: props.ExcludeDirs,
							})
						</div>
						<div class="w-full">
							<label for="exclude-files" class="font-medium">Files to Exclude from Recap</label>
							@ConfigSetupPage.ExcludeFiles(ConfigSetupPage.ExcludeFilesProps{
								ExcludeFiles: props.ExcludeFiles,
							})
						</div>
						<div class="w-full">
							This is the duplicate authors
							@ConfigSetupPage.AllAuthorsList(ConfigSetupPage.AllAuthorsListProps{
								AllAuthors: props.AllAuthors,
							})
						</div>
						<button
							class="btn lg w-full"
						>
							Save
							@components.LoadingSpinner()
						</button>
					</form>
				</div>
			</div>
		</div>
		if props.Toast != "" {
			@components.Toast(components.ToastProps{
				Message: props.Toast,
			})
		}
		<script src="/scripts/config-page.js"></script>
	}
}
