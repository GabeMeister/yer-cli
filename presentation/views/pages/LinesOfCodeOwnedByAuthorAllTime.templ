package pages

import (
	"GabeMeister/yer-cli/analyzer"
	"GabeMeister/yer-cli/presentation/helpers"
	"GabeMeister/yer-cli/presentation/views/components"
)

func getLinesOfCodeOwnedByAuthorAllTimeData(multiRepoRecap analyzer.MultiRepoRecap) helpers.ChartJSBarChartData {
	result := helpers.ChartJSBarChartData{
		YAxisLabel: "Lines of Code",
		XAxisLabel: "Author",
		Dataset:    make(map[string]int),
	}

	chartLimit := 12

	for author, val := range multiRepoRecap.LinesOfCodeOwnedByAuthor {
		shortAuthor := string(author)
		if len(shortAuthor) > chartLimit {
			shortAuthor = shortAuthor[:chartLimit] + "..."
		}
		result.Dataset[string(shortAuthor)] = val
	}

	return result
}

templ LinesOfCodeOwnedByAuthorAllTime(multiRepoRecap analyzer.MultiRepoRecap) {
	@components.Slide() {
		@components.Title() {
			Commits Made by Repo
		}
		<div
			class="w-full max-h-[900px] px-6 flex justify-center"
			data-grouped-bar-chart-data={ helpers.Json(helpers.GetBarChartData(getLinesOfCodeOwnedByAuthorAllTimeData(multiRepoRecap))) }
		>
			<canvas id="grouped-bar-chart-canvas"></canvas>
		</div>
		@components.NextButton(helpers.GetMultiRepoNextButtonLink("/lines-of-code-owned-by-author-all-time", multiRepoRecap))
	}
}
