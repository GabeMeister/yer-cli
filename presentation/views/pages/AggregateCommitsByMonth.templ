
package pages

import (
	"GabeMeister/yer-cli/analyzer"
	"GabeMeister/yer-cli/presentation/helpers"
	"GabeMeister/yer-cli/presentation/views/components"
)

func getAggregateCommitsByMonthData(multiRepoRecap analyzer.MultiRepoRecap) map[string]interface{} {
	result := helpers.ChartJSBarChartData{
		YAxisLabel: "Commits",
		XAxisLabel: "Month",
		Dataset:    make(map[string]int),
	}
	months := helpers.GetMonthsOfYear()

	for idx, commits := range multiRepoRecap.AggregateCommitsByMonth {
		month := months[idx]
		result.Dataset[month] = commits
	}

	return helpers.GetBarChartData(result, helpers.BarChartOptions{
		Sort: false,
	})
}

templ AggregateCommitsByMonth(multiRepoRecap analyzer.MultiRepoRecap) {
	@components.Slide() {
		@components.Title() {
			Aggregate Commits by Month
		}
		<div
			class="chart-js-container"
			data-grouped-bar-chart-data={ helpers.Json(getAggregateCommitsByMonthData(multiRepoRecap)) }
		>
			<canvas id="grouped-bar-chart-canvas"></canvas>
		</div>
		@components.NextButton(helpers.GetMultiRepoNextButtonLink("/aggregate-commits-by-month", multiRepoRecap))
	}
}
