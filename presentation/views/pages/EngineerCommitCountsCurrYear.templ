package presentation_views_pages

import (
	"GabeMeister/yer-cli/analyzer"
	helpers "GabeMeister/yer-cli/presentation/helpers"
	components "GabeMeister/yer-cli/presentation/views/components"
	"fmt"
	"sort"
)

func getEngineerCommitCountsChartData(recap analyzer.Recap) helpers.BarChartData {
	barChartData := helpers.BarChartData{Data: []helpers.DataPoint{}, XAxisLabel: "Engineer", YAxisLabel: fmt.Sprintf("â†‘ Commits (%d)", analyzer.CURR_YEAR)}

	for engineer, commitCount := range recap.EngineerCommitCountsCurrYear {
		barChartData.Data = append(barChartData.Data, helpers.DataPoint{
			X: engineer,
			Y: commitCount,
		})
	}

	sort.Slice(barChartData.Data, func(i int, j int) bool {
		return barChartData.Data[i].Y > barChartData.Data[j].Y
	})

	return barChartData
}

templ EngineerCommitCountsCurrYear(recap analyzer.Recap) {
	@components.Slide() {
		<div id="container" data-value={ helpers.Json(getEngineerCommitCountsChartData(recap)) }></div>
		<script type="module" src="/scripts/bar-chart.js"></script>
	}
}
